
# Weather Data Analysis Project

This project involves loading weather data from a CSV file into a SQLite database and performing various analyses using Python libraries such as Pandas, SQLite3, and NumPy.

## Prerequisites

Before you begin, ensure you have met the following requirements:

- Python 3.x installed on your machine
- The following Python libraries installed:
  - pandas
  - sqlite3 (comes pre-installed with Python)
  - numpy

You can install Pandas and NumPy using pip:

```bash
pip install pandas numpy
```

## Files

- `1. Weather Data.csv`: The CSV file containing the weather data.
- `sqlpd.py`: The python script which SQLite db and connects to it.
- `weather_data_analysis.py`: The Python script that performs the data analysis.
- `README.md`: This file providing an overview of the project.

## Instructions

1. **Load the Weather Data:**

   The script `weather_data_analysis.py` first loads the weather data from the provided CSV file into a Pandas DataFrame and then writes this DataFrame to a SQLite database.

   ```python
   import pandas as pd
   import sqlite3

   # Load the CSV file
   csv_file_path = '/path/to/your/1. Weather Data.csv'
   df = pd.read_csv(csv_file_path)

   # Create a SQLite database and connect to it
   conn = sqlite3.connect('weather_data.db')

   # Write the dataframe to a SQL table
   df.to_sql('weather_data', conn, if_exists='replace', index=False)

   # Close the connection
   conn.close()
   ```

2. **Data Analysis:**

   The script then connects to the SQLite database to perform various data analyses:

   - **Find all records where the weather was exactly clear:**

     ```python
     clear_weather = pd.read_sql_query("SELECT * FROM weather_data WHERE Weather = 'Clear'", conn)
     print(f"Number of clear weather records: {len(clear_weather)}")
     ```

   - **Find the number of times the wind speed was exactly 4 km/hr:**

     ```python
     wind_speed_4_kmph = pd.read_sql_query("SELECT COUNT(*) as count FROM weather_data WHERE \"Wind Speed_km/h\" = 4", conn)
     print(f"Number of times the wind speed was exactly 4 km/hr: {wind_speed_4_kmph['count'].values[0]}")
     ```

   - **Calculate the mean visibility of the dataset:**

     ```python
     visibility_data = pd.read_sql_query("SELECT Visibility_km FROM weather_data", conn)
     mean_visibility = np.mean(visibility_data['Visibility_km'])
     print(f"Mean visibility of the dataset: {mean_visibility} km")
     ```

   - **Find the number of weather conditions that include snow:**

     ```python
     snow_conditions = pd.read_sql_query("SELECT COUNT(*) as count FROM weather_data WHERE Weather LIKE '%Snow%'", conn)
     print(f"Number of weather conditions that include snow: {snow_conditions['count'].values[0]}")
     ```

   - **Additional analyses using NumPy:**

     ```python
     visibility_array = np.array(visibility_data['Visibility_km'])
     print(f"Standard deviation of visibility: {np.std(visibility_array)} km")
     print(f"Median visibility: {np.median(visibility_array)} km")
     print(f"Maximum visibility: {np.max(visibility_array)} km")
     print(f"Minimum visibility: {np.min(visibility_array)} km")
     ```

3. **Run the Script:**

   To execute the script, run the following command:

   ```bash
   python weather_data_analysis.py
   ```

## NOTE make sure cd to the correct directory.

## Conclusion

This project demonstrates how to load data from a CSV file into a SQLite database and perform various analyses using Pandas and NumPy. The analysis includes counting specific weather conditions, calculating mean visibility, and more.
